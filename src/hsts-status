#!/usr/bin/env perl

use Modern::Perl 2020;

# UTF8 for Source Code, and File Handles
use utf8;
use open qw(:std :utf8);
use Encode qw(decode);

use Cpanel::JSON::XS qw(decode_json);
use HTTP::Request  ();
use LWP::UserAgent ();
use URI            ();

use GParse::Domain qw(get_domain_name);

our $VERSION = 2.00;

my $me = (split m{/}, $0)[-1];

@ARGV or die "Usage:\n\t$me <url>...\n";

# UTF8 for Command Line Arguments
local @ARGV = map { decode 'UTF-8', $_ } @ARGV unless utf8::is_utf8 $ARGV[0];

my $uri = URI->new;
$uri->scheme ('https');
$uri->host   ('hstspreload.org');
$uri->path   ('/api/v2/status');

my $ua = LWP::UserAgent->new (
    agent                 => '',
    keep_alive            => 1,           # keep at most 1 connection alive
    max_redirect          => 0,
    parse_head            => '',
    protocols_allowed     => ['https'],
    requests_redirectable => [],
    ssl_opts              => { verify_hostname => 1 },
    timeout               => 5,                          # seconds
);

foreach my $url (@ARGV) {
    my $domain_name = get_domain_name $url;

    unless ($domain_name) {
        say "$url doesnâ€™t represent a valid registrable domain name!";
        next;
    }

    $uri->query_form (domain => $domain_name);

    my $request = HTTP::Request->new (GET => $uri);

    my $response = $ua->request ($request);

    if ($response->is_error) {
        say "$domain_name - " . $response->status_line;
        next;
    }

    my $status = decode_json $response->content;
    say "$domain_name is " . $status->{status} . '.';
}
