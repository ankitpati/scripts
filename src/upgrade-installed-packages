#!/usr/bin/env bash

set -uo pipefail

# Some formulae are forcefully versioned by Homebrew, so upgrading to the
# latest needs some work.
brew_forced_version_formulae=(
    postgresql
)

container_manager="$(command -v podman 2>/dev/null || :)"
container_manager="${container_manager:-docker}"

brew update --force
brew upgrade

if [[ $OSTYPE == *darwin* ]]
then
    brew unlink docker
    brew link --overwrite docker
fi

for brew_forced_version_formula in "${brew_forced_version_formulae[@]}"
do
    mapfile -t < <( \
        brew formulae |
            grep -- "^$brew_forced_version_formula@" |
            sort --reverse --version-sort \
    )

    old_version_present=''
    for brew_forced_version_old_formula in "${MAPFILE[@]:1}"
    do
        if brew uninstall -- "$brew_forced_version_old_formula"
        then
            old_version_present=1
        fi
    done

    if ((old_version_present == 1))
    then
        brew install -- "${MAPFILE[0]}"
    fi
done

cpan-outdated --exclude-core -p |
    xargs --no-run-if-empty -- cpan --

steampipe plugin update --all

tldr --update

"$container_manager" image ls --format='{{.Repository}}:{{.Tag}}' |
    grep --invert-match -- '^localhost/' |
    sed -- 's/:<none>$//' |
    xargs --max-args=1 --no-run-if-empty -- "$container_manager" pull --

mapfile -t -d '' < <(find "$HOME/.arkade/bin" -type f -executable -printf '%f\0')
for arktool in "${MAPFILE[@]}"
do
    arkade get "$arktool"
done

krew upgrade

mapfile -t < <(code --list-extensions)
for codext in "${MAPFILE[@]}"
do
    code --install-extension="$codext" --force
done

if [[ $OSTYPE == *linux* ]]
then
    gcloud components update
elif [[ $OSTYPE == *darwin* ]]
then
    softwareupdate -l

    # Upgrading GCloud CLI through Homebrew resets installed components, and
    # they need to be reinstalled afterwards.
    mapfile -t gcloud_installed_components < <( \
        gcloud components list --format='json(id, state.name)' 2>/dev/null |
            jq --raw-output '.[] | select(.state.name == "Installed") | .id' \
    )

    brew upgrade --cask --greedy
    sudo --reset-timestamp

    brew unlink docker
    brew link --overwrite docker

    gcloud components install "${gcloud_installed_components[@]}"
fi

vim +PlugUpgrade +PlugUpdate
